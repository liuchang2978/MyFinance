<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--<context:component-scan base-package="org.liuchang" />-->
    <context:component-scan base-package="org.liuchang.service"/>
    <context:component-scan base-package="org.liuchang.dao"/>
    <!-- spring的属性加载器，加载properties文件中的属性 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:db.properties</value>
        </property>
        <property name="fileEncoding" value="utf-8" />
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 指定连接数据库的驱动 -->
        <property name="driverClass" value="${driverClass}"></property>
        <!-- 指定连接数据库的URL -->
        <property name="jdbcUrl" value="${url}"></property>
        <!-- 指定连接数据库的用户名和密码 -->
        <property name="user" value="${username}"></property>
        <property name="password" value="${password}"></property>

        <!-- 指定连接数据库连接池的最大连接数 -->
        <property name="maxPoolSize" value="${maxIdleTime}"></property>
        <!-- 指定连接数据库连接池的最小连接数 -->
        <property name="minPoolSize" value="${minPoolSize}"></property>
        <!-- 指定连接数据库连接池的初始化连接数 -->
        <property name="initialPoolSize" value="${initialPoolSize}"></property>
        <!-- 指定连接数据库连接池的连接的最大空闲时间 -->
        <property name="maxIdleTime" value="${maxIdleTime}"></property>
    </bean>


    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描me/gacl/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置
        value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件
        UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描
         -->
        <property name="mapperLocations" value="classpath:org/liuchang/dao/*/mapping/*.xml" />
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="org.liuchang.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 配置一个事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--配置事务拦截器 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <aop:config>
        <aop:pointcut id="businessService" expression="execution(public * org.liuchang.*.service.*.impl.*.*(..))"  />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>

</beans>